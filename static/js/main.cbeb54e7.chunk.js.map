{"version":3,"sources":["Notes.js","App.js","index.js"],"names":["Notes","props","className","no","value","App","textInput1","React","createRef","textInput2","useState","input1","setInput1","input2","setInput2","output","setOutput","count","useEffect","amount","notes","noteCounter","Array","fill","i","Math","floor","countCurrency","map","num","Number","ref","type","placeholder","onClick","e","current","data","index","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0LACe,SAASA,EAAMC,GAC5B,OACE,qBAAKC,UAAU,OAAf,SACE,oBAAGA,UAAU,OAAb,yBACgBD,EAAME,GADtB,WACkCF,EAAMG,WCF/B,SAASC,IACtB,IAAIC,EAAaC,IAAMC,YACnBC,EAAaF,IAAMC,YACvB,EAA4BE,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACIC,EAAQ,EAMZC,qBAAU,WACRF,EAyCF,SAAuBG,GAKrB,IAJA,IAAIC,EAAQ,CAAC,IAAM,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,GAChDC,EAAcC,MAAM,IAAIC,KAAK,GAGxBC,EAAI,EAAGA,EAAI,GAAIA,IAClBL,GAAUC,EAAMI,KAClBH,EAAYG,GAAKC,KAAKC,MAAMP,EAASC,EAAMI,IAC3CL,GAAkBE,EAAYG,GAAKJ,EAAMI,IAI7C,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IAClBH,EAAYG,GAIlB,OAAOH,EA1DGM,CAAcd,EAASF,MAChC,CAACA,EAAQE,IAGZE,EAAOa,KAAI,SAACC,GACV,OAAOC,OAAOD,MAGhB,IAAIT,EAAQ,CAAC,IAAM,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,GACpD,OACE,sBAAKlB,UAAU,MAAf,UACE,0CACA,uBACA,kDAAqBW,EAASF,KAC9B,uBACET,UAAU,QACV6B,IAAKzB,EACL0B,KAAK,OACLC,YAAY,sBAEd,uBACE/B,UAAU,QACV6B,IAAKtB,EACLuB,KAAK,OACLC,YAAY,uBAEd,qBAAK/B,UAAU,mBAAf,SACE,wBAAQA,UAAU,MAAMgC,QAjCP,SAACC,GAEtBvB,EAAUN,EAAW8B,QAAQhC,OAC7BU,EAAUL,EAAW2B,QAAQhC,QA8BzB,yBAIF,sBAAKF,UAAU,YAAf,UACGa,EAAOa,KAAI,SAACS,EAAMC,GAEjB,OADArB,GAASoB,EACF,cAAC,EAAD,CAAOjC,MAAOiC,EAAMlC,GAAIiB,EAAMkB,IAAaA,MAEpD,oBAAGpC,UAAU,QAAb,gCAAyCe,WC/CjD,IAAMsB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACtC,EAAD,MAEFkC,I","file":"static/js/main.cbeb54e7.chunk.js","sourcesContent":["import \"./Notes.css\";\r\nexport default function Notes(props) {\r\n  return (\r\n    <div className=\"para\">\r\n      <p className=\"text\">\r\n        No of &#8377;{props.no} note = {props.value}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Notes from \"./Notes\";\nexport default function App() {\n  let textInput1 = React.createRef(); // React use ref to get input value\n  let textInput2 = React.createRef();\n  const [input1, setInput1] = useState(\"\");\n  const [input2, setInput2] = useState(\"\");\n  const [output, setOutput] = useState([]);\n  var count = 0;\n  let onOnclickHandler = (e) => {\n    //console.log(textInput.current.value);\n    setInput1(textInput1.current.value);\n    setInput2(textInput2.current.value);\n  };\n  useEffect(() => {\n    setOutput(countCurrency(input2 - input1));\n  }, [input1, input2]);\n  //var myArr = String(output)\n  //.split(\",\")\n  output.map((num) => {\n    return Number(num);\n  });\n  //console.log(myArr);\n  let notes = [2000, 500, 200, 100, 50, 20, 10, 5, 2, 1];\n  return (\n    <div className=\"App\">\n      <h1>Bill APP</h1>\n      <br />\n      <h3>Balance Amount: {input2 - input1}</h3>\n      <input\n        className=\"input\"\n        ref={textInput1}\n        type=\"text\"\n        placeholder=\"Enter Bill amount\"\n      />\n      <input\n        className=\"input\"\n        ref={textInput2}\n        type=\"text\"\n        placeholder=\"Enter amount given\"\n      />\n      <div className=\"button-container\">\n        <button className=\"btn\" onClick={onOnclickHandler}>\n          Calculate\n        </button>\n      </div>\n      <div className=\"container\">\n        {output.map((data, index) => {\n          count += data;\n          return <Notes value={data} no={notes[index]} key={index} />;\n        })}\n        <p className=\"total\">Total No of notes: {count}</p>\n      </div>\n    </div>\n  );\n\n  function countCurrency(amount) {\n    let notes = [2000, 500, 200, 100, 50, 20, 10, 5, 2, 1];\n    let noteCounter = Array(10).fill(0);\n\n    // count notes using Greedy approach\n    for (let i = 0; i < 10; i++) {\n      if (amount >= notes[i]) {\n        noteCounter[i] = Math.floor(amount / notes[i]);\n        amount = amount - noteCounter[i] * notes[i];\n      }\n    }\n    // Print notes\n    for (let i = 0; i < 10; i++) {\n      if (noteCounter[i] !== 0) {\n        //console.log(notes[i] + \" rupe notes: \" + noteCounter[i]);\n      }\n    }\n    return noteCounter;\n  }\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}